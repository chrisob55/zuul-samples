<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd">


    <!--//////// Root Context ///////-->

    <!--
        Activates detection of various annotations such as @PostConstruct, @Required, @Autowired, ...
        Note that this will *not* enable classpath scan and auto-registering of beans.
    -->
    <context:annotation-config />

    <!-- Registers properties for placeholder replacements. -->
    <context:property-placeholder location="/WEB-INF/*.properties" />


    <!--//// OAuth Resources ////-->

    <!--
        OAuth 2.0 resource for trusted client with client_credentials grant.
        Note: attribute 'type' could not be placed in properties file due some strange bug.
    -->
    <oauth:resource id="sample"
                    type="client_credentials"
                    client-id="${oauth.client_id}"
                    client-secret="${oauth.client_secret}"
                    access-token-uri="${oauth.token_endpoint}"
                    client-authentication-scheme="form"
                    scope="${oauth.scope}" />

    <!--
        RestTemplate for accessing the remote service that automatically handles
        all OAuth 2.0 stuff.
    -->
    <oauth:rest-template id="oauthRestTemplate" resource="sample" />

    <!-- Sample remote service that reads data from simple-provider API -->
    <bean id="remoteService" class="cz.cvut.zuul.samples.client.portlet.RemoteServiceImpl"
          p:restTemplate-ref="oauthRestTemplate" />

</beans>
